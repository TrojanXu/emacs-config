;; Object config/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "config/"
  :tables (list 
   (semanticdb-table "init.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("add-to-list" code nil nil [15 79])
            ("load-theme" code nil nil [80 103])
            ("ibus" include nil nil [190 205])
            ("add-hook" code nil nil [207 248])
            ("ibus-define-common-key" code nil nil [285 320])
            ("ibus-define-common-key" code nil nil [351 385])
            ("setq" code nil nil [436 491])
            ("global-set-key" code nil nil [530 573])
            ("window-numbering" include nil nil [665 692])
            ("window-numbering-mode" code nil nil [693 718])
            ("setq" code nil nil [744 847])
            ("add-to-list" code nil nil [920 984])
            ("expand-region" include nil nil [987 1011])
            ("global-set-key" code nil nil [1014 1060])
            ("global-set-key" code nil nil [1063 1111])
            ("add-to-list" code nil nil [1183 1250])
            ("multiple-cursors" include nil nil [1253 1280])
            ("global-set-key" code nil nil [1283 1328])
            ("global-set-key" code nil nil [1331 1379])
            ("global-set-key" code nil nil [1380 1432])
            ("windows" include nil nil [1505 1523])
            ("setq" code nil nil [1653 1680])
            ("display-time-mode" code nil nil [1794 1815])
            ("setq" code nil nil [1817 1850])
            ("setq" code nil nil [1852 1886])
            ("setq-default" code nil nil [1936 1972])
            ("add-to-list" code nil nil [2133 2196])
            ("load" code nil nil [2199 2256])
            ("setq" code nil nil [2406 2489])
            ("semantic-load-enable-minimum-features" code nil nil [2490 2529])
            ("semantic-load-enable-code-helpers" code nil nil [2530 2565])
            ("global-set-key" code nil nil [2567 2611])
            ("global-set-key" code nil nil [2623 2663])
            ("global-set-key" code nil nil [2715 3403])
            ("semantic-tag-folding" include nil nil [3420 3464])
            ("global-semantic-tag-folding-mode" code nil nil [3465 3501])
            ("define-key" code nil nil [3502 3589])
            ("define-key" code nil nil [3590 3677])
            ("cuda-mode" include nil nil [4514 4534])
            ("add-to-list" code nil nil [4636 4701])
            ("add-to-list" code nil nil [4705 4767])
            ("smartparens-config" include nil nil [4772 4801])
            ("smartparens-global-mode" code nil nil [4804 4831])
            ("icomplete-mode" code nil nil [4937 4955])
            ("define-key" code nil nil [4956 5038])
            ("tool-bar-mode" code nil nil [5110 5128])
            ("menu-bar-mode" code nil nil [5144 5162])
            ("setq" code nil nil [5196 5217]))          
    :file "init.el"
    :pointmax 5614
    :fsize 5955
    :lastmodtime '(21301 21050 475544 256000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "keybindings.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("global-set-key" code nil nil [1699 1749])
            ("global-set-key" code nil nil [1841 1874])
            ("global-set-key" code nil nil [1875 1920])
            ("global-set-key" code nil nil [1922 1956])
            ("global-set-key" code nil nil [1957 2011])
            ("global-set-key" code nil nil [2037 2099]))          
    :file "keybindings.el"
    :pointmax 2100
    :fsize 2099
    :lastmodtime '(21353 53452 251694 54000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "ibus.el"
    :file "ibus.el"
    :fsize 119446
    :lastmodtime '(21294 15072 82982 313000)
    )
   (semanticdb-table "window-numbering.el"
    :file "window-numbering.el"
    :fsize 9279
    :lastmodtime '(21293 14159 557809 455000)
    )
   (semanticdb-table "windows.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("winner-mode" code nil nil [222 237])
            ("global-set-key" code nil nil [321 366])
            ("global-set-key" code nil nil [367 412])
            ("split-window-func-with-other-buffer" function (:arguments ("split-function")) nil [639 849])
            ("global-set-key" code nil nil [851 938])
            ("global-set-key" code nil nil [939 1028])
            ("split-window-horizontally-instead" function nil nil [1216 1401])
            ("split-window-vertically-instead" function nil nil [1403 1584])
            ("global-set-key" code nil nil [1586 1645])
            ("global-set-key" code nil nil [1646 1703])
            ("windows" package nil nil [1709 1727]))          
    :file "windows.el"
    :pointmax 1729
    :fsize 1728
    :lastmodtime '(21294 36726 705252 217000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "cuda-mode.el"
    :file "cuda-mode.el"
    :fsize 6274
    :lastmodtime '(21294 20407 233364 649000)
    )
   (semanticdb-table "others.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("qiang-comment-dwim-line" function (:arguments ("arg")) nil [1063 1330])
            ("global-set-key" code nil nil [1331 1379])
            ("setq" code nil nil [1482 1516])
            ("setq" code nil nil [1537 1571])
            ("setq" code nil nil [1589 1643])
            ("global-set-key" code nil nil [1653 1696])
            ("global-set-key" code nil nil [1697 1741])
            ("show-paren-mode" code nil nil [1744 1763])
            ("setq" code nil nil [1765 1801]))          
    :file "others.el"
    :pointmax 1803
    :fsize 1940
    :lastmodtime '(21353 51954 27638 731000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "indent.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("my-c-style" variable
               (:constant-flag t
                :default-value (quote ((c-tab-always-indent . t) (c-hanging-braces-alist (substatement-open after) (brace-list-open)) (c-hanging-colons-alist (member-init-intro before) (inher-intro) (case-label after) (label after) (access-label after)) (c-cleanup-list scope-operator empty-defun-braces defun-close-semi) (c-offsets-alist (arglist-close . c-lineup-arglist) (substatement-open . 0) (case-label . 4) (block-open . 0) (knr-argdecl-intro . -)) (c-echo-syntactic-information-p . t))))
                nil [1 1022])
            ("c-add-style" code nil nil [1023 1058])
            ("my-c-mode-common-hook" function nil nil [1061 1392])
            ("add-hook" code nil nil [1393 1446]))          
    :file "indent.el"
    :pointmax 1447
    :fsize 1446
    :lastmodtime '(21352 34982 632592 70000)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "smex.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("ido" include nil nil [670 684])
            ("smex" customgroup (:user-visible-flag t) nil [686 877])
            ("smex-auto-update" variable (:default-value t) nil [879 1068])
            ("smex-save-file" variable (:default-value "~/.smex-items") nil [1070 1298])
            ("smex-history-length" variable (:default-value 7) nil [1300 1484])
            ("smex-prompt-string" variable (:default-value "M-x ") nil [1486 1596])
            ("smex-flex-matching" variable (:default-value t) nil [1598 1751])
            ("smex-initialized-p" variable nil nil [1753 1784])
            ("smex-cache" variable nil nil [1785 1804])
            ("smex-ido-cache" variable nil nil [1805 1828])
            ("smex-data" variable nil nil [1829 1847])
            ("smex-history" variable nil nil [1848 1869])
            ("smex-command-count" variable nil nil [1870 1899])
            ("smex-custom-action" variable nil nil [1900 1931])
            ("when" code nil nil [1963 2199])
            ("smex" function nil nil [2318 2586])
            ("smex-already-running" function nil nil [2588 2754])
            ("smex-update-and-rerun" function nil nil [2756 2901])
            ("smex-read-and-run" function (:arguments ("commands" "initial-input")) nil [2903 3367])
            ("smex-major-mode-commands" function (:user-visible-flag t) nil [3384 3905])
            ("smex-completing-read" function (:arguments ("choices" "initial-input")) nil [3907 4397])
            ("smex-prompt-with-prefix-arg" function nil nil [4399 4785])
            ("smex-prepare-ido-bindings" function nil nil [4787 5161])
            ("smex-rebuild-cache" function nil nil [5272 6065])
            ("smex-convert-for-ido" function (:arguments ("command-items")) nil [6067 6193])
            ("smex-restore-history" function nil nil [6195 6930])
            ("smex-sort-according-to-cache" function (:arguments ("list")) nil [6932 7293])
            ("smex-update" function nil nil [7295 7378])
            ("smex-detect-new-commands" function nil nil [7380 7575])
            ("smex-auto-update" function (:arguments ("idle-time")) nil [7577 7838])
            ("smex-initialize" function nil nil [7855 8094])
            ("smex-initialize-ido" function nil nil [8096 8278])
            ("smex-load-save-file" function nil nil [8280 9065])
            ("smex-save-file-not-empty-p" function nil nil [9067 9159])
            ("smex-save-history" function nil nil [9161 9441])
            ("smex-save-to-file" function nil nil [9443 9613])
            ("smex-sorting-rules" function (:arguments ("command-item" "other-command-item")) nil [9710 10441])
            ("smex-rank" function (:arguments ("command")) nil [10467 11729])
            ("smex-update-counter" function (:arguments ("command-item")) nil [11731 12162])
            ("smex-sort-item-at" function (:arguments ("n")) nil [12164 13103])
            ("smex-detect-position" function (:arguments ("cell" "function")) nil [13105 13584])
            ("smex-remove-nth-cell" function (:arguments ("n" "list")) nil [13586 13807])
            ("smex-insert-cell" function (:arguments ("new-cell" "n" "list")) nil [13809 14009])
            ("smex-do-with-selected-item" function (:arguments ("fn")) nil [14117 14211])
            ("smex-describe-function" function nil nil [14213 14417])
            ("smex-where-is" function nil nil [14419 14500])
            ("smex-find-function" function nil nil [14502 14593])
            ("smex-extract-commands-from-keymap" function (:arguments ("map")) nil [14595 14711])
            ("smex-parse-keymap" function (:arguments ("map" "commands")) nil [14713 15120])
            ("smex-extract-commands-from-features" function (:arguments ("mode")) nil [15122 16091])
            ("smex-show-unbound-commands" function (:user-visible-flag t) nil [16093 16812])
            ("smex" package nil nil [16814 16829]))          
    :file "smex.el"
    :pointmax 16853
    :fsize 16851
    :lastmodtime '(21353 53370 339691 29000)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!xth!Extended!emacs!config!semantic.cache"
  :semantic-tag-version "2.1"
  :semanticdb-version "2.1"
  )
