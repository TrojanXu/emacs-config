;; Object auto-complete/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "auto-complete/"
  :tables (list 
   (semanticdb-table "auto-complete.el"
    :major-mode 'emacs-lisp-mode
    :tags 
        '( ("ac-version" variable
               (:constant-flag t
                :default-value "1.4.0")
                nil [1359 1388])
            ("cl" include nil nil [1411 1424])
            ("popup" include nil nil [1427 1443])
            ("ac-error" function (:arguments ("var")) nil [1464 1648])
            ("auto-complete" customgroup (:user-visible-flag t) nil [1673 1759])
            ("ac-delay" variable (:default-value 0.1) nil [1761 1868])
            ("ac-auto-show-menu" variable (:default-value 0.8) nil [1870 2109])
            ("ac-show-menu-immediately-on-auto-complete" variable (:default-value t) nil [2111 2277])
            ("ac-expand-on-auto-complete" variable (:default-value t) nil [2279 2434])
            ("ac-disable-faces" variable (:default-value (quote (font-lock-comment-face font-lock-string-face font-lock-doc-face))) nil [2436 2647])
            ("ac-stop-flymake-on-completing" variable (:default-value t) nil [2649 2793])
            ("ac-use-fuzzy" variable (:default-value (and (locate-library "fuzzy") t)) nil [2795 2931])
            ("ac-fuzzy-cursor-color" variable (:default-value "red") nil [2933 3044])
            ("ac-use-comphist" variable (:default-value t) nil [3046 3170])
            ("ac-comphist-threshold" variable (:default-value 0.7) nil [3172 3298])
            ("ac-comphist-file" variable (:default-value (expand-file-name (concat (if (boundp (quote user-emacs-directory)) user-emacs-directory "~/.emacs.d/") "/ac-comphist.dat"))) nil [3300 3612])
            ("ac-user-dictionary" variable nil nil [3614 3725])
            ("ac-dictionary-files" variable (:default-value (quote ("~/.dict"))) nil [3727 3842])
            ("defvaralias" code nil nil [3843 3903])
            ("ac-dictionary-directories" variable (:default-value (ignore-errors (when load-file-name (let ((installed-dir (file-name-directory load-file-name))) (loop for name in (quote ("ac-dict" "dict")) for dir = (concat installed-dir name) if (file-directory-p dir) collect dir))))) nil [3905 4295])
            ("ac-use-quick-help" variable (:default-value t) nil [4297 4403])
            ("ac-quick-help-delay" variable (:default-value 1.5) nil [4405 4509])
            ("ac-menu-height" variable (:default-value 10) nil [4511 4615])
            ("defvaralias" code nil nil [4616 4671])
            ("ac-quick-help-height" variable (:default-value 20) nil [4673 4779])
            ("ac-quick-help-prefer-pos-tip" variable (:default-value t) nil [4781 4949])
            ("defvaralias" code nil nil [4950 5017])
            ("ac-candidate-limit" variable nil nil [5019 5154])
            ("defvaralias" code nil nil [5155 5206])
            ("ac-modes" variable (:default-value (quote (emacs-lisp-mode lisp-mode lisp-interaction-mode slime-repl-mode c-mode cc-mode c++-mode go-mode java-mode malabar-mode clojure-mode clojurescript-mode scala-mode scheme-mode ocaml-mode tuareg-mode coq-mode haskell-mode agda-mode agda2-mode perl-mode cperl-mode python-mode ruby-mode lua-mode ecmascript-mode javascript-mode js-mode js2-mode php-mode css-mode makefile-mode sh-mode fortran-mode f90-mode ada-mode xml-mode sgml-mode ts-mode sclang-mode verilog-mode))) nil [5208 5844])
            ("ac-compatible-packages-regexp" variable (:default-value "^ac-") nil [5846 6002])
            ("ac-non-trigger-commands" variable (:default-value (quote (*table--cell-self-insert-command electric-buffer-list))) nil [6004 6215])
            ("ac-trigger-commands" variable (:default-value (quote (self-insert-command))) nil [6217 6401])
            ("ac-trigger-commands-on-completing" variable (:default-value (quote (delete-backward-char backward-delete-char backward-delete-char-untabify autopair-backspace paredit-backward-delete paredit-backward-delete-word))) nil [6403 6779])
            ("ac-trigger-key" variable nil nil [6781 7314])
            ("ac-auto-start" variable (:default-value 2) nil [7316 7729])
            ("ac-stop-words" variable nil nil [7731 7848])
            ("defvaralias" code nil nil [7849 7889])
            ("ac-use-dictionary-as-stop-words" variable (:default-value t) nil [7891 8057])
            ("ac-ignore-case" variable (:default-value (quote smart)) nil [8059 8395])
            ("ac-dwim" variable (:default-value t) nil [8397 8524])
            ("ac-use-menu-map" variable nil nil [8526 8680])
            ("ac-use-overriding-local-map" variable nil nil [8682 8874])
            ("ac-disable-inline" variable nil nil [8876 8999])
            ("ac-candidate-menu-min" variable (:default-value 1) nil [9001 9127])
            ("ac-max-width" variable nil nil [9129 9382])
            ("ac-completion-face" variable
               (:default-value (quote ((t (:foreground "darkgray" :underline t))))
                :type "face")
                nil [9384 9514])
            ("ac-candidate-face" variable
               (:default-value (quote ((t (:inherit popup-face))))
                :type "face")
                nil [9516 9622])
            ("ac-candidate-mouse-face" variable
               (:default-value (quote ((t (:inherit popup-menu-mouse-face))))
                :type "face")
                nil [9624 9753])
            ("ac-selection-face" variable
               (:default-value (quote ((t (:inherit popup-menu-selection-face))))
                :type "face")
                nil [9755 9885])
            ("auto-complete-mode-hook" variable nil nil [9887 9958])
            ("auto-complete-mode" variable nil nil [9988 10069])
            ("ac-cursor-color" variable nil nil [10071 10121])
            ("ac-inline" variable nil nil [10123 10177])
            ("ac-menu" variable nil nil [10179 10218])
            ("ac-show-menu" variable nil nil [10220 10282])
            ("ac-last-completion" variable nil nil [10284 10379])
            ("ac-quick-help" variable nil nil [10381 10431])
            ("ac-completing" variable nil nil [10433 10528])
            ("ac-buffer" variable nil nil [10530 10595])
            ("ac-point" variable nil nil [10597 10645])
            ("ac-last-point" variable nil nil [10647 10709])
            ("ac-prefix" variable nil nil [10711 10752])
            ("defvaralias" code nil nil [10753 10788])
            ("ac-selected-candidate" variable nil nil [10790 10853])
            ("ac-common-part" variable nil nil [10855 10977])
            ("ac-whole-common-part" variable nil nil [10979 11102])
            ("ac-prefix-overlay" variable nil nil [11104 11165])
            ("ac-timer" variable nil nil [11167 11215])
            ("ac-show-menu-timer" variable nil nil [11217 11274])
            ("ac-quick-help-timer" variable nil nil [11276 11335])
            ("ac-triggered" variable nil nil [11337 11382])
            ("ac-limit" variable nil nil [11384 11454])
            ("ac-candidates" variable nil nil [11456 11506])
            ("ac-candidates-cache" variable nil nil [11508 11585])
            ("ac-fuzzy-enable" variable nil nil [11587 11660])
            ("ac-dwim-enable" variable nil nil [11662 11740])
            ("ac-mode-map" variable (:default-value (make-sparse-keymap)) nil [11742 11879])
            ("ac-completing-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote ac-expand)) (define-key map [tab] (quote ac-expand)) (define-key map "" (quote ac-complete)) (define-key map [return] (quote ac-complete)) (define-key map (kbd "M-TAB") (quote auto-complete)) (define-key map "\356" (quote ac-next)) (define-key map "\360" (quote ac-previous)) (define-key map [down] (quote ac-next)) (define-key map [up] (quote ac-previous)) (define-key map [f1] (quote ac-help)) (define-key map [M-f1] (quote ac-persist-help)) (define-key map (kbd "C-?") (quote ac-help)) (define-key map (kbd "C-M-?") (quote ac-persist-help)) (define-key map [C-down] (quote ac-quick-help-scroll-down)) (define-key map [C-up] (quote ac-quick-help-scroll-up)) (define-key map "\216" (quote ac-quick-help-scroll-down)) (define-key map "\220" (quote ac-quick-help-scroll-up)) (dotimes (i 9) (let ((symbol (intern (format "ac-complete-select-%d" (1+ i))))) (fset symbol (\` (lambda nil (interactive) (when (and (ac-menu-live-p) (popup-select ac-menu (\, i))) (ac-complete))))) (define-key map (read-kbd-macro (format "M-%s" (1+ i))) symbol))) map)) nil [11881 13093])
            ("defvaralias" code nil nil [13094 13148])
            ("ac-menu-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) (define-key map "" (quote ac-next)) (define-key map "" (quote ac-previous)) (define-key map "" (quote ac-isearch)) (define-key map [mouse-1] (quote ac-mouse-1)) (define-key map [down-mouse-1] (quote ac-ignore)) (define-key map [mouse-4] (quote ac-mouse-4)) (define-key map [mouse-5] (quote ac-mouse-5)) map)) nil [13150 13601])
            ("ac-current-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) map)) nil [13603 13717])
            ("ac-match-function" variable (:default-value (quote all-completions)) nil [13719 13790])
            ("ac-prefix-definitions" variable (:default-value (quote ((symbol . ac-prefix-symbol) (file . ac-prefix-file) (valid-file . ac-prefix-valid-file) (c-dot . ac-prefix-c-dot) (c-dot-ref . ac-prefix-c-dot-ref) (cc-member . ac-prefix-cc-member)))) nil [13792 14068])
            ("ac-sources" variable (:default-value (quote (ac-source-words-in-same-mode-buffers))) nil [14070 14157])
            ("make-variable-buffer-local" code nil nil [14158 14198])
            ("ac-compiled-sources" variable nil nil [14200 14269])
            ("ac-current-sources" variable nil nil [14271 14373])
            ("ac-omni-completion-sources" variable nil nil [14375 14443])
            ("ac-current-prefix-def" variable nil nil [14445 14479])
            ("ac-ignoring-prefix-def" variable nil nil [14481 14516])
            ("ac-comphist" variable nil nil [14558 14618])
            ("ac-comphist-make-tab" function nil nil [14620 14687])
            ("ac-comphist-tab" function (:arguments ("db")) nil [14689 14733])
            ("ac-comphist-cache" function (:arguments ("db")) nil [14735 14781])
            ("ac-comphist-make" function (:arguments ("tab")) nil [14783 14907])
            ("ac-comphist-get" function (:arguments ("db" "string" "create")) nil [14909 15168])
            ("ac-comphist-add" function (:arguments ("db" "string" "prefix")) nil [15170 15463])
            ("ac-comphist-score" function (:arguments ("db" "string" "prefix")) nil [15465 16614])
            ("ac-comphist-sort" function (:arguments ("db" "collection" "prefix" "threshold")) nil [16616 17528])
            ("ac-comphist-serialize" function (:arguments ("db")) nil [17530 17699])
            ("ac-comphist-deserialize" function (:arguments ("sexp")) nil [17701 18067])
            ("ac-comphist-init" function nil nil [18069 18165])
            ("ac-comphist-load" function nil nil [18167 18556])
            ("ac-comphist-save" function nil nil [18558 18784])
            ("ac-buffer-dictionary" variable nil nil [18805 18838])
            ("ac-file-dictionary" variable (:default-value (make-hash-table :test (quote equal))) nil [18839 18897])
            ("ac-clear-dictionary-cache" function nil nil [18899 19155])
            ("ac-file-dictionary" function (:arguments ("filename")) nil [19157 19564])
            ("ac-mode-dictionary" function (:arguments ("mode")) nil [19566 19948])
            ("ac-buffer-dictionary" function (:arguments ("buffer")) nil [19950 20398])
            ("ac-menu-at-wrapper-line-p" function nil nil [20435 20714])
            ("ac-stop-word-p" function (:arguments ("word")) nil [20716 20870])
            ("ac-prefix-default" function nil nil [20872 21195])
            ("ac-prefix-symbol" function nil nil [21197 21335])
            ("ac-prefix-file" function nil nil [21337 21467])
            ("ac-prefix-valid-file" function nil nil [21469 22077])
            ("ac-prefix-c-dot" function nil nil [22079 22249])
            ("ac-prefix-c-dot-ref" function nil nil [22251 22456])
            ("ac-prefix-cc-member" function nil nil [22458 22661])
            ("ac-define-prefix" function (:arguments ("name" "prefix")) nil [22663 22849])
            ("ac-match-substring" function (:arguments ("prefix" "candidates")) nil [22851 23047])
            ("ac-source-entity" function (:arguments ("source")) nil [23049 23148])
            ("ac-source-available-p" function (:arguments ("source")) nil [23150 24051])
            ("ac-compile-sources" function (:arguments ("sources")) nil [24053 24791])
            ("ac-compiled-sources" function nil nil [24793 24927])
            ("ac-menu-live-p" function nil nil [24929 24982])
            ("ac-menu-create" function (:arguments ("point" "width" "height")) nil [24984 25497])
            ("ac-menu-delete" function nil nil [25499 25587])
            ("ac-inline-overlay" function nil nil [25589 25640])
            ("ac-inline-live-p" function nil nil [25642 25712])
            ("ac-inline-show" function (:arguments ("point" "string")) nil [25714 27641])
            ("ac-inline-delete" function nil nil [27643 27785])
            ("ac-inline-hide" function nil nil [27787 28123])
            ("ac-inline-update" function nil nil [28125 28553])
            ("ac-put-prefix-overlay" function nil nil [28555 29061])
            ("ac-remove-prefix-overlay" function nil nil [29063 29378])
            ("ac-activate-completing-map" function nil nil [29380 29767])
            ("ac-deactivate-completing-map" function nil nil [29769 30109])
            ("ac-selected-candidate" function nil nil [30111 30197])
            ("ac-prefix" function (:arguments ("requires" "ignore-list")) nil [30199 31798])
            ("ac-init" function nil nil [31800 32170])
            ("ac-candidates-1" function (:arguments ("source")) nil [32172 34406])
            ("ac-candidates" function nil nil [34408 36118])
            ("ac-update-candidates" function (:arguments ("cursor" "scroll-top")) nil [36120 36804])
            ("ac-reposition" function nil nil [36806 37166])
            ("ac-cleanup" function nil nil [37168 38621])
            ("ac-abort" function nil nil [38623 38682])
            ("ac-expand-string" function (:arguments ("string" "remove-undo-boundary")) nil [38684 40181])
            ("ac-set-trigger-key" function (:arguments ("key")) nil [40183 40567])
            ("ac-set-timer" function nil nil [40569 40690])
            ("ac-cancel-timer" function nil nil [40692 40797])
            ("ac-update" function (:arguments ("force")) nil [40799 41631])
            ("ac-update-greedy" function (:arguments ("force")) nil [41633 41949])
            ("ac-set-show-menu-timer" function nil nil [41951 42201])
            ("ac-cancel-show-menu-timer" function nil nil [42203 42348])
            ("ac-show-menu" function nil nil [42350 42500])
            ("ac-help" function (:arguments ("persist")) nil [42502 42617])
            ("ac-persist-help" function nil nil [42619 42675])
            ("ac-last-help" function (:arguments ("persist")) nil [42677 42825])
            ("ac-last-persist-help" function nil nil [42827 42893])
            ("ac-set-quick-help-timer" function nil nil [42895 43110])
            ("ac-cancel-quick-help-timer" function nil nil [43112 43261])
            ("ac-pos-tip-show-quick-help" function (:arguments ("menu" "item" "args")) nil [43263 44235])
            ("ac-quick-help-use-pos-tip-p" function nil nil [44237 44360])
            ("ac-quick-help" function (:arguments ("force")) nil [44362 45086])
            ("ac-remove-quick-help" function nil nil [45088 45287])
            ("ac-last-quick-help" function nil nil [45289 45887])
            ("ac-define-quick-help-command" function (:arguments ("name" "arglist" "body")) nil [45889 46066])
            ("ac-define-quick-help-command" code nil nil [46068 46204])
            ("ac-define-quick-help-command" code nil nil [46206 46338])
            ("ac-isearch-callback" function (:arguments ("list")) nil [46373 46452])
            ("ac-isearch" function nil nil [46454 46999])
            ("auto-complete-1" function (:arguments ("sources" "triggered")) nil [47035 48020])
            ("auto-complete" function
               (:user-visible-flag t
                :arguments ("sources"))
                nil [48037 48175])
            ("ac-fuzzy-complete" function (:user-visible-flag t) nil [48177 48782])
            ("ac-next" function (:user-visible-flag t) nil [48784 49021])
            ("ac-previous" function (:user-visible-flag t) nil [49023 49276])
            ("ac-expand" function (:user-visible-flag t) nil [49278 49859])
            ("ac-expand-common" function (:user-visible-flag t) nil [49861 50202])
            ("ac-complete-1" function (:arguments ("candidate")) nil [50204 50814])
            ("ac-complete" function (:user-visible-flag t) nil [50816 50914])
            ("ac-start" function
               (:user-visible-flag t
                :arguments ("requires" "force-init" "triggered"))
                nil [50916 52346])
            ("ac-stop" function (:user-visible-flag t) nil [52348 52452])
            ("ac-ignore" function
               (:user-visible-flag t
                :arguments ("ignore"))
                nil [52454 52524])
            ("ac-mouse-1" function (:arguments ("event")) nil [52526 52650])
            ("ac-mouse-4" function (:arguments ("event")) nil [52652 52714])
            ("ac-mouse-5" function (:arguments ("event")) nil [52716 52774])
            ("ac-trigger-key-command" function (:arguments ("force")) nil [52776 53056])
            ("ac-clear-variables-every-minute-timer" variable nil nil [53088 53138])
            ("ac-clear-variables-after-save" variable nil nil [53139 53181])
            ("ac-clear-variables-every-minute" variable nil nil [53182 53226])
            ("ac-minutes-counter" variable nil nil [53227 53256])
            ("ac-clear-variable-after-save" function (:arguments ("variable" "pred")) nil [53258 53388])
            ("ac-clear-variables-after-save" function nil nil [53390 53572])
            ("ac-clear-variable-every-minutes" function (:arguments ("variable" "minutes")) nil [53574 53705])
            ("ac-clear-variable-every-minute" function (:arguments ("variable")) nil [53707 53803])
            ("ac-clear-variable-every-10-minutes" function (:arguments ("variable")) nil [53805 53906])
            ("ac-clear-variables-every-minute" function nil nil [53908 54107])
            ("ac-cursor-on-diable-face-p" function (:arguments ("point")) nil [54137 54260])
            ("ac-trigger-command-p" function (:arguments ("command")) nil [54262 54608])
            ("ac-fallback-key-sequence" function nil nil [54610 54794])
            ("ac-fallback-command" function (:arguments ("except-command")) nil [54796 55132])
            ("ac-compatible-package-command-p" function (:arguments ("command")) nil [55134 55349])
            ("ac-handle-pre-command" function nil nil [55351 56285])
            ("ac-handle-post-command" function nil nil [56287 56676])
            ("ac-setup" function nil nil [56678 57212])
            ("define-minor-mode" code nil nil [57229 57870])
            ("auto-complete-mode-maybe" function nil nil [57872 58070])
            ("define-global-minor-mode" code nil nil [58087 58209])
            ("ac-flyspell-workaround" function (:user-visible-flag t) nil [58258 58650])
            ("ac-linum-workaround" function (:user-visible-flag t) nil [58652 58937])
            ("ac-define-source" function (:arguments ("name" "source")) nil [58965 59552])
            ("ac-word-index" variable nil nil [59580 59606])
            ("ac-candidate-words-in-buffer" function (:arguments ("point" "prefix" "limit")) nil [59608 60508])
            ("ac-incremental-update-word-index" function nil nil [60510 61061])
            ("ac-update-word-index-1" function nil nil [61063 61484])
            ("ac-update-word-index" function nil nil [61486 61700])
            ("ac-word-candidates" function (:arguments ("buffer-pred")) nil [61702 62296])
            ("ac-define-source" code nil nil [62298 62371])
            ("ac-define-source" code nil nil [62373 62484])
            ("ac-define-source" code nil nil [62486 62721])
            ("ac-symbols-cache" variable nil nil [62746 62775])
            ("ac-clear-variable-every-10-minutes" code nil nil [62776 62830])
            ("ac-symbol-file" function (:arguments ("symbol" "type")) nil [62832 64316])
            ("ac-symbol-documentation" function (:arguments ("symbol")) nil [64318 66092])
            ("ac-symbol-candidates" function nil nil [66094 66380])
            ("ac-define-source" code nil nil [66382 66521])
            ("ac-functions-cache" variable nil nil [66548 66579])
            ("ac-clear-variable-every-10-minutes" code nil nil [66580 66636])
            ("ac-function-candidates" function nil nil [66638 66847])
            ("ac-define-source" code nil nil [66849 67037])
            ("ac-variables-cache" variable nil nil [67064 67095])
            ("ac-clear-variable-every-10-minutes" code nil nil [67096 67152])
            ("ac-variable-candidates" function nil nil [67154 67362])
            ("ac-define-source" code nil nil [67364 67507])
            ("ac-emacs-lisp-features" variable nil nil [67533 67568])
            ("ac-clear-variable-every-10-minutes" code nil nil [67569 67629])
            ("ac-emacs-lisp-feature-candidates" function nil nil [67631 68292])
            ("ac-define-source" code nil nil [68294 68471])
            ("defvaralias" code nil nil [68473 68537])
            ("ac-define-source" code nil nil [68556 68751])
            ("ac-define-source" code nil nil [68790 68897])
            ("ac-filename-cache" variable nil nil [68918 68948])
            ("ac-filename-candidate" function nil nil [68950 69711])
            ("ac-define-source" code nil nil [69713 69911])
            ("ac-define-source" code nil nil [69934 70023])
            ("auto-complete" package nil nil [70025 70049]))          
    :file "auto-complete.el"
    :pointmax 70081
    :fsize 70090
    :lastmodtime '(21294 20853 362117 85000)
    :unmatched-syntax '((close-paren 1424 . 1425) (symbol 1391 . 1408) (open-paren 1390 . 1391))
    )
   (semanticdb-table "auto-complete-pkg.el"
    :major-mode 'emacs-lisp-mode
    :tags nil
    :file "auto-complete-pkg.el"
    :pointmax 99
    :fsize 98
    :lastmodtime '(21293 25665 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!xth!Extended!emacs!config!auto-complete!semantic.cache"
  :semantic-tag-version "2.1"
  :semanticdb-version "2.1"
  )
